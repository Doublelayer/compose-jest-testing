/**
 * Generated by https://github.com/dsheiko/puppetry
 * on Fri Apr 02 2021 22:56:55 GMT+0200 (Mitteleurop√§ische Sommerzeit)
 * Suite: de-de_desktop
 */

var nVer = process.version.match(/^v(\d+)/);
if (!nVer || nVer[1] < 9) {
  console.error('WARNING: You have an outdated Node.js version ' + process.version + '. You need at least v.9.x to run this test suite.');
}

const { bs, util, fetch, localStorage } = require('../lib/bootstrap')('de-de_desktop'),
  puppeteerOptions = require('../puppeteer.config.json'),
  devicesRaw = require('puppeteer/DeviceDescriptors'),
  devices = devicesRaw.devicesMap;

jest.setTimeout(50000);

let consoleLog = [], // assetConsoleMessage
  dialogLog = []; // assertDialog;

bs.TARGETS = {};

// Environment variables
let ENV = {
  DE_DE_BASE_URL: 'https://www.jh-profishop.de',
};

bs.TARGETS['CLOSE_TEASER'] = async () => await bs.query('//*[@id="newsletterClose"]', false, 'CLOSE_TEASER');
bs.TARGETS['ACCEPT_USER_CENTRICS'] = async () => await bs.query('//*[@id="uc-btn-accept-banner"]', false, 'ACCEPT_USER_CENTRICS');
bs.TARGETS['INPUT_EMAIL'] = async () => await bs.query('//*[@id="email"]', false, 'INPUT_EMAIL');
bs.TARGETS['SUBMIT_BTN'] = async () => await bs.query('//*[@id="newsletterModel"]/*/button', false, 'SUBMIT_BTN');

describe('de-de_desktop', () => {
  beforeAll(async () => {
    await bs.setup(puppeteerOptions, { allure: false, requireInterceptTraffic: true });
    await util.once(async () => {
      bs.browser && console.log('BROWSER: ', await bs.browser.version());
      await util.savePuppetterInfo(bs);
    });

    bs.page.on('console', (message) => consoleLog.push(message));
    bs.page.on('dialog', (dialog) => dialogLog.push(dialog));

    bs.performance.watchTraffic();
  });

  afterAll(async () => {
    await bs.teardown();
  });

  // describe('/newsletter/register/', () => {
  //   test('preconfig page {gycklz2m14m}', async () => {
  //     let result, assert, searchStr, localEnv;
  //     // SNIPPET set desktop viewport: START
  //     localEnv = Object.assign({}, ENV);

  //     // Defining browser viewport
  //     await bs.page.setViewport({
  //       width: 1920,
  //       height: 1080,
  //       deviceScaleFactor: 1,
  //       isMobile: false,
  //       hasTouch: false,
  //       isLandscape: false,
  //     });

  //     ENV = Object.assign({}, localEnv);
  //     // SNIPPET set desktop viewport: END

  //     // Navigating to {{ DE_DE_BASE_URL }}/newsletter/register/
  //     bs.performance.reset();
  //     await bs.page.goto(`${ENV['DE_DE_BASE_URL']}/newsletter/register/`, { timeout: 30000, waitUntil: 'networkidle0' });

  //     // SNIPPET close usercentrics and newsletter teaser popup if available: START
  //     localEnv = Object.assign({}, ENV);

  //     // Evaluate JavaScript code in the page context
  //     await bs.page.evaluate(() => {
  //       try {
  //         document.querySelector('#uc-btn-accept-banner').click();
  //         document.querySelector('#newsletterClose').click();
  //       } catch (e) {
  //         // nothing to do
  //       }
  //     });
  //     ENV = Object.assign({}, localEnv);
  //     // SNIPPET close usercentrics and newsletter teaser popup if available: END

  //     // SNIPPET hide consult-phone (header&footer): START
  //     localEnv = Object.assign({}, ENV);

  //     // Evaluate JavaScript code in the page context
  //     await bs.page.evaluate(() => {
  //       document.querySelector('#consult-phone').style.visibility = 'hidden';
  //       document.querySelector('.call-number').style.visibility = 'hidden';
  //     });
  //     ENV = Object.assign({}, localEnv);
  //     // SNIPPET hide consult-phone (header&footer): END
  //   });

  //   test('assert screenshot {gycklz5rw04}', async () => {
  //     let result, assert, searchStr, localEnv;

  //     // Referesh the page
  //     await bs.page.reload({ timeout: 30000, waitUntil: 'networkidle0' });

  //     // Asserts that screenshot of the page matches already approved one
  //     result = await bs.assertScreenshot(
  //       'gycklz5s0qm.' + 'de-de_newsletter_register',
  //       {
  //         fullPage: true,
  //         omitBackground: false,
  //       },
  //       {
  //         includeAA: true,
  //         diffColor: [255, 0, 0],
  //         aaColor: [255, 255, 0],
  //         threshold: '0.2',
  //       },
  //       bs.page
  //     );
  //     expect(result).toMatchScreenshot(0.2, 'page.assertScreenshot');
  //   });

  //   test('test email is required {scklxzr02q}', async () => {
  //     let result, assert, searchStr, localEnv;

  //     // Referesh the page
  //     await bs.page.reload({ timeout: 30000, waitUntil: 'networkidle0' });

  //     // Wait for CSS selector/Xpath to appear in page
  //     await bs.page.waitForXPath('//*[@id="newsletterModel"]/*/button');

  //     // Emulating mouse click
  //     await (await bs.getTarget('SUBMIT_BTN')).click({ button: 'left', clickCount: 1, delay: 0 });

  //     // Waiting for a response
  //     searchStr = '/register/submit/'.replace(/^\./, '');
  //     if (true) {
  //       await bs.page.waitForResponse((rsp) => rsp.url().includes(searchStr), { timeout: 30000 });
  //     }

  //     // Asserts that screenshot of the page matches already approved one
  //     result = await bs.assertScreenshot(
  //       'scklxzxavy.' + 'de-de_newsletter_email_required',
  //       {
  //         fullPage: true,
  //         omitBackground: false,
  //       },
  //       {
  //         includeAA: true,
  //         diffColor: [255, 0, 0],
  //         aaColor: [255, 255, 0],
  //         threshold: '0.2',
  //       },
  //       bs.page
  //     );
  //     expect(result).toMatchScreenshot(0.2, 'page.assertScreenshot');
  //   });
  // });

  describe('/basket', () => {
    test('preconfig page {gycklz4fj58}', async () => {
      let result, assert, searchStr, localEnv;
      // SNIPPET set desktop viewport: START
      localEnv = Object.assign({}, ENV);

      // Defining browser viewport
      await bs.page.setViewport({
        width: 1920,
        height: 1080,
        deviceScaleFactor: 1,
        isMobile: false,
        hasTouch: false,
        isLandscape: false,
      });

      ENV = Object.assign({}, localEnv);
      // SNIPPET set desktop viewport: END

      // Navigating to {{ DE_DE_BASE_URL }}/basket/
      bs.performance.reset();
      await bs.page.goto(`${ENV['DE_DE_BASE_URL']}/basket/`, { timeout: 30000, waitUntil: 'networkidle0' });

      // SNIPPET hide consult-phone (header&footer): START
      localEnv = Object.assign({}, ENV);

      // Evaluate JavaScript code in the page context
      await bs.page.evaluate(() => {
        document.querySelector('#consult-phone').style.visibility = 'hidden';
        document.querySelector('.call-number').style.visibility = 'hidden';
      });
      ENV = Object.assign({}, localEnv);
      // SNIPPET hide consult-phone (header&footer): END
    });

    test('assert screenshot {gycklz4dw79}', async () => {
      let result, assert, searchStr, localEnv;

      // Asserts that screenshot of the page matches already approved one
      result = await bs.assertScreenshot(
        'gycklz4g5xz.' + 'de-de_basket',
        {
          fullPage: true,
          omitBackground: false,
        },
        {
          includeAA: true,
          diffColor: [255, 0, 0],
          aaColor: [255, 255, 0],
          threshold: '0.2',
        },
        bs.page
      );
      expect(result).toMatchScreenshot(0.2, 'page.assertScreenshot');
    });
  });
});
